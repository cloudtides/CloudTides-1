version: "3.8"
services:
  database:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=postgres
    volumes:
      - server_db:/var/lib/postgresql/data

  backend:
    build: ../tides-server
    volumes:
      - ../tides-server:/data
    environment:
      - SERVER_IP=0.0.0.0
      - SERVER_PORT=8033
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=postgres
      - ADMIN_USER=Admin
      - ADMIN_PASSWORD=Admin
      - SECRET_KEY=test
      - OFFICIAL_EMAIL=admin@cloudtides.org.cn
      - OFFICIAL_PASSWORD=nBd9NzkdGG9Sev3
      - WEB_SSH_SERVICE_HOST=localhost/webssh
      - TEMP_STORAGE_PATH=/data
      - MQ_HOST=mq:9092
    stdin_open: true
    tty: true
    depends_on:
      - database
    entrypoint: ["/build/backend"]
  webssh:
    image: yinhaozheng/webssh
    environment:
      - host_url=http://backend:8033
    depends_on:
      - backend
  frontend:
    build:
      context: ../ui
      args:
        - MOD=dev
    depends_on:
      - backend
      - webssh

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  mq:
    image: confluentinc/cp-kafka:7.0.1
    container_name: mq
    restart: always
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_INTERNAL://mq:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  broker:
    build: ../tides-broker
    restart: always
    environment:
      - AGENT_NAME=thinkcloud
      - MQ_HOST=mq:9092
      - SERVER_URL=http://backend:8033/api/v1/application/instance/action/statue
    depends_on:
      - mq
    volumes:
      - ${PWD}/hosts.yaml:/build/hosts.yaml

  nginx:
    image: nginx:stable
    volumes:
      - ${PWD}/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
volumes:
  server_db: {}
